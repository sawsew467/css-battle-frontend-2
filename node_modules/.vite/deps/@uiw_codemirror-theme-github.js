import {
  EditorView,
  HighlightStyle,
  syntaxHighlighting,
  tags
} from "./chunk-GADDQMRG.js";
import {
  _extends
} from "./chunk-KBUAZBQ3.js";
import "./chunk-4EOJPDL2.js";

// node_modules/@uiw/codemirror-themes/esm/index.js
var createTheme = (_ref) => {
  var {
    theme,
    settings = {},
    styles = []
  } = _ref;
  var themeOptions = {
    ".cm-gutters": {}
  };
  var baseStyle = {};
  if (settings.background) {
    baseStyle.backgroundColor = settings.background;
  }
  if (settings.foreground) {
    baseStyle.color = settings.foreground;
  }
  if (settings.background || settings.foreground) {
    themeOptions["&"] = baseStyle;
  }
  if (settings.fontFamily) {
    themeOptions["&.cm-editor .cm-scroller"] = {
      fontFamily: settings.fontFamily
    };
  }
  if (settings.gutterBackground) {
    themeOptions[".cm-gutters"].backgroundColor = settings.gutterBackground;
  }
  if (settings.gutterForeground) {
    themeOptions[".cm-gutters"].color = settings.gutterForeground;
  }
  if (settings.gutterBorder) {
    themeOptions[".cm-gutters"].borderRightColor = settings.gutterBorder;
  }
  if (settings.caret) {
    themeOptions[".cm-content"] = {
      caretColor: settings.caret
    };
    themeOptions[".cm-cursor, .cm-dropCursor"] = {
      borderLeftColor: settings.caret
    };
  }
  var activeLineGutterStyle = {};
  if (settings.gutterActiveForeground) {
    activeLineGutterStyle.color = settings.gutterActiveForeground;
  }
  if (settings.lineHighlight) {
    themeOptions[".cm-activeLine"] = {
      backgroundColor: settings.lineHighlight
    };
    activeLineGutterStyle.backgroundColor = settings.lineHighlight;
  }
  themeOptions[".cm-activeLineGutter"] = activeLineGutterStyle;
  if (settings.selection) {
    themeOptions["&.cm-focused .cm-selectionBackground, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
      backgroundColor: settings.selection
    };
  }
  if (settings.selectionMatch) {
    themeOptions["& .cm-selectionMatch"] = {
      backgroundColor: settings.selectionMatch
    };
  }
  var themeExtension = EditorView.theme(themeOptions, {
    dark: theme === "dark"
  });
  var highlightStyle = HighlightStyle.define(styles);
  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];
  return extension;
};

// node_modules/@uiw/codemirror-theme-github/esm/index.js
var defaultSettingsGithubLight = {
  background: "#fff",
  foreground: "#24292e",
  selection: "#BBDFFF",
  selectionMatch: "#BBDFFF",
  gutterBackground: "#fff",
  gutterForeground: "#6e7781"
};
var githubLightInit = (options) => {
  var {
    theme = "light",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGithubLight, settings),
    styles: [{
      tag: [tags.standard(tags.tagName), tags.tagName],
      color: "#116329"
    }, {
      tag: [tags.comment, tags.bracket],
      color: "#6a737d"
    }, {
      tag: [tags.className, tags.propertyName],
      color: "#6f42c1"
    }, {
      tag: [tags.variableName, tags.attributeName, tags.number, tags.operator],
      color: "#005cc5"
    }, {
      tag: [tags.keyword, tags.typeName, tags.typeOperator, tags.typeName],
      color: "#d73a49"
    }, {
      tag: [tags.string, tags.meta, tags.regexp],
      color: "#032f62"
    }, {
      tag: [tags.name, tags.quote],
      color: "#22863a"
    }, {
      tag: [tags.heading],
      color: "#24292e",
      fontWeight: "bold"
    }, {
      tag: [tags.emphasis],
      color: "#24292e",
      fontStyle: "italic"
    }, {
      tag: [tags.deleted],
      color: "#b31d28",
      backgroundColor: "ffeef0"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#e36209"
    }, {
      tag: [tags.url, tags.escape, tags.regexp, tags.link],
      color: "#032f62"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.invalid,
      color: "#cb2431"
    }, ...styles]
  });
};
var githubLight = githubLightInit();
var defaultSettingsGithubDark = {
  background: "#0d1117",
  foreground: "#c9d1d9",
  caret: "#c9d1d9",
  selection: "#003d73",
  selectionMatch: "#003d73",
  lineHighlight: "#36334280"
};
var githubDarkInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsGithubDark, settings),
    styles: [{
      tag: [tags.standard(tags.tagName), tags.tagName],
      color: "#7ee787"
    }, {
      tag: [tags.comment, tags.bracket],
      color: "#8b949e"
    }, {
      tag: [tags.className, tags.propertyName],
      color: "#d2a8ff"
    }, {
      tag: [tags.variableName, tags.attributeName, tags.number, tags.operator],
      color: "#79c0ff"
    }, {
      tag: [tags.keyword, tags.typeName, tags.typeOperator, tags.typeName],
      color: "#ff7b72"
    }, {
      tag: [tags.string, tags.meta, tags.regexp],
      color: "#a5d6ff"
    }, {
      tag: [tags.name, tags.quote],
      color: "#7ee787"
    }, {
      tag: [tags.heading],
      color: "#d2a8ff",
      fontWeight: "bold"
    }, {
      tag: [tags.emphasis],
      color: "#d2a8ff",
      fontStyle: "italic"
    }, {
      tag: [tags.deleted],
      color: "#ffdcd7",
      backgroundColor: "ffeef0"
    }, {
      tag: [tags.atom, tags.bool, tags.special(tags.variableName)],
      color: "#ffab70"
    }, {
      tag: tags.link,
      textDecoration: "underline"
    }, {
      tag: tags.strikethrough,
      textDecoration: "line-through"
    }, {
      tag: tags.invalid,
      color: "#f97583"
    }, ...styles]
  });
};
var githubDark = githubDarkInit();
export {
  defaultSettingsGithubDark,
  defaultSettingsGithubLight,
  githubDark,
  githubDarkInit,
  githubLight,
  githubLightInit
};
//# sourceMappingURL=@uiw_codemirror-theme-github.js.map
